function [ x, k ] = gauss_seidel( A, b, ep, kMax )
%GAUSS_SEIDEL Summary of this function goes here
%   Detailed explanation goes here
    
    % @param A 方程组的系数矩阵
    % @param b 方程组的右端项
    % @param ep 精度要求。
    % @return x 方程组的解
    % @return k 迭代次数

    if nargin == 3
        kMax = 100;
    end
    
    [n,m] = size(A);
    nb = length(b);
    %当方程组行与列的维数不相等时，停止计算，并输出出错信息
    if n ~= m
        error('矩阵A行数和列数必须相等!');
    end
    %当方程组与右端项的维数不匹配时，停止计算，并输出出错信息
    if n ~= nb
        error('矩阵A的行数必须和b的长度相等!');
    end 
    L = zeros(n, n);
    U = zeros(n, n);
    D = zeros(n, n);
    for i = 2:n
        for j = 1:i - 1
            L(i, j) = -A(i, j);
        end
    end
    for i = 1 : n - 1
        for j = i + 1 : n
            U(i, j) = -A(i, j);
        end
    end
    for i = 1 : n
        D(i, i)=A(i, i);
    end
    B = (D - L) \ U;        %B为迭代矩阵
    g = (D - L) \ b;        %g为右端项
    pr = max(abs(eig(B))); %求迭代矩阵谱半径
    if pr >= 1
        error('迭代矩阵谱半径大于1迭代法不收敛');
    end
    k = 0;
    tol = 1;
    x0 = zeros(size(b));
    while tol >= ep
        x = B * x0 + g;
        k = k + 1;         %迭代步数
        tol = norm(x - x0);%前后两步迭代结果的误差
        x0 = x;
        if(k >= kMax)
            disp('Warning: 迭代次数太多，可能不收敛！');
            return;
        end
    end
end